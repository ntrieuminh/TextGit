package pageObjectModel;

import static org.monte.media.FormatKeys.EncodingKey;
import static org.monte.media.FormatKeys.FrameRateKey;
import static org.monte.media.FormatKeys.KeyFrameIntervalKey;
import static org.monte.media.FormatKeys.MIME_AVI;
import static org.monte.media.FormatKeys.MediaTypeKey;
import static org.monte.media.FormatKeys.MimeTypeKey;
import static org.monte.media.VideoFormatKeys.CompressorNameKey;
import static org.monte.media.VideoFormatKeys.DepthKey;
import static org.monte.media.VideoFormatKeys.ENCODING_AVI_TECHSMITH_SCREEN_CAPTURE;
import static org.monte.media.VideoFormatKeys.QualityKey;

import java.awt.AWTException;
import java.awt.GraphicsConfiguration;
import java.awt.GraphicsEnvironment;
import java.io.File;
import java.io.IOException;

import org.apache.commons.io.FileUtils;
import org.monte.media.Format;
import org.monte.media.FormatKeys.MediaType;
import org.monte.media.math.Rational;
import org.monte.screenrecorder.ScreenRecorder;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.firefox.FirefoxProfile;
import org.openqa.selenium.firefox.internal.ProfilesIni;

public class Calculator {

	private static ScreenRecorder screenRecorder;

	public static void main(String[] args) throws IOException, AWTException {

		GraphicsConfiguration gconfig = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice()
				.getDefaultConfiguration();

		Format fileFormat = new Format(MediaTypeKey, MediaType.FILE, MimeTypeKey, MIME_AVI);
		Format screenFormat = new Format(MediaTypeKey, MediaType.VIDEO, 
				EncodingKey, ENCODING_AVI_TECHSMITH_SCREEN_CAPTURE, 
				CompressorNameKey, ENCODING_AVI_TECHSMITH_SCREEN_CAPTURE,
				DepthKey, (int) 24, FrameRateKey, Rational.valueOf(15), 
				QualityKey, 1.0f, KeyFrameIntervalKey, (int) (15 * 60));
		Format mouseFormat = new Format(MediaTypeKey, MediaType.VIDEO, 
				EncodingKey, "black", FrameRateKey, Rational.valueOf(30));

		screenRecorder = new ScreenRecorder(gconfig, fileFormat, screenFormat, mouseFormat, null);

		System.setProperty("webdriver.gecko.driver", "BrowserDrivers/FireFox/geckodriver.exe");

		// Get profile of default FireFox
		ProfilesIni profiles = new ProfilesIni();
		FirefoxProfile profile = profiles.getProfile("default");

		// Set disabled notification in firefox
		profile.setPreference("dom.webnotifications.enabled", false);
		profile.setPreference("intl.accept_languages", "en");

		// Handle SSL Certificate Error using Selenium Webdriver
		profile.setAcceptUntrustedCertificates(true);
		profile.setAssumeUntrustedCertificateIssuer(false);

		// Create a new instance of the Firefox driver
		FirefoxOptions options = new FirefoxOptions().setProfile(profile);
		WebDriver driver = new FirefoxDriver(options);
		driver.manage().window().maximize();

		// Delete all cookies on browser before running.
		driver.manage().deleteAllCookies();

		// Start Capturing the Video
		screenRecorder.start();

		// Launch the calculator Website
		driver.naget("http://www.calculator.net/");

		// Use page Object library now
		PageObjectsCalc.lnk_percent_calc(driver).click();

		PageObjectsCalc.txt_num_1(driver).clear();
		PageObjectsCalc.txt_num_1(driver).sendKeys("10");

		PageObjectsCalc.txt_num_2(driver).clear();
		PageObjectsCalc.txt_num_2(driver).sendKeys("50");

		PageObjectsCalc.btn_calc(driver).click();
		String result = PageObjectsCalc.web_result(driver).getText();

		// Take a screenshot
		String curPath = System.getProperty("user.dir");
		File screenshot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
		FileUtils.copyFile(screenshot, new File(curPath + "\\Screenshots\\screenshots1.jpg"));

		if (result.equals("5")) {
			System.out.println(" The Result is Pass");
		} else {
			System.out.println(" The Result is Fail");
		}

		driver.close();

		// Stop the ScreenRecorder
		screenRecorder.stop();
	}

}
